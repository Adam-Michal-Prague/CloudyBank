<UserControl x:Class="CloudyBank.Web.Ria.Views.Account"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Microsoft.Windows;assembly=System.Windows.Controls.Toolkit"
    xmlns:controlsToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit"
    xmlns:visualizationToolkit="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"
    xmlns:charting="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
    xmlns:controlsInputToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
    xmlns:datagrid="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data"
    xmlns:userControls="clr-namespace:CloudyBank.Web.Ria.UserControls"
    xmlns:views="clr-namespace:CloudyBank.Web.Ria.Views"
    xmlns:mvvm="clr-namespace:CloudyBank.MVVM;assembly=CloudyBank.MVVM"
    xmlns:technical="clr-namespace:CloudyBank.Web.Ria.Technical"
    mc:Ignorable="d"
    d:DesignHeight="600" d:DesignWidth="600" d:DataContext="{d:DesignData /SampleData/AccountViewModelSampleData.xaml}">
    <Grid x:Name="LayoutRoot" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
            
        
        <!-- Get the parent customer VM via VM locator -->
        <!-- The customer is used in the codebehind, to fill the context menu of tags of the datagrid
             a bug inside datagrid does not allow the vmlocator to be used the normal way -->
        <mvvm:ViewModelLocator x:Name="Customer" ViewModelName="CustomerViewModel"/>
        
        <!-- Operations list -->
        <Border Margin="5" Grid.ColumnSpan="2">
            <StackPanel>
                <Grid Background="{StaticResource GreenBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Content="Update" Command="{Binding UpdateAccountCommand}" Style="{StaticResource SimpleButton}" Margin="3,3,30,3" Background="Transparent" Grid.Column="1"/>
                    <userControls:TimeSpanSelector Days="{Binding AccountTimeSpan, Mode=TwoWay}" HorizontalAlignment="Right" Grid.Column="2"/>
                </Grid>
                                
                <datagrid:DataGrid x:Name="OperationsGrid" ItemsSource="{Binding Path=FilteredOperations}" AutoGenerateColumns="False" IsReadOnly="True"
                                  Background="White" MaxHeight="190">
                    <datagrid:DataGrid.Columns>
                        <datagrid:DataGridTemplateColumn>
                            <datagrid:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Ellipse Width="10" Height="10" Fill="{Binding Positive, Converter={StaticResource OperationBoolToFill}}"/>
                                </DataTemplate>
                            </datagrid:DataGridTemplateColumn.CellTemplate>
                        </datagrid:DataGridTemplateColumn>
                        <datagrid:DataGridTextColumn Binding="{Binding Date, StringFormat='MMMM dd, yyyy'}"/>
                        <datagrid:DataGridTextColumn Binding="{Binding Description}"/>
                        <datagrid:DataGridTextColumn Binding="{Binding Amount, StringFormat=\{0:n2\}}"/>
                        <datagrid:DataGridTextColumn Binding="{Binding Currency}"/>
                        <datagrid:DataGridTemplateColumn>
                            <datagrid:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding TagName}" MouseRightButtonDown="TextBlock_MouseRightButtonDown" VerticalAlignment="Center"/>
                                </DataTemplate>
                            </datagrid:DataGridTemplateColumn.CellTemplate>
                        </datagrid:DataGridTemplateColumn>
                    </datagrid:DataGrid.Columns>
                </datagrid:DataGrid>
            </StackPanel>
        </Border>

            
        

            <!-- Balance Evolution -->
            <Border Background="{StaticResource GreenBrush}" Margin="5" Grid.Row="1">

                <charting:Chart Style="{StaticResource SimpleChart}" Foreground="White" HorizontalAlignment="Stretch" Template="{StaticResource BareChart}">
                    <charting:Chart.Axes>
                        <charting:LinearAxis Orientation="Y" ShowGridLines="True" Foreground="White">
                            <charting:LinearAxis.Style>
                                <Style TargetType="charting:LinearAxis">
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="GridLineStyle">
                                        <Setter.Value>
                                            <Style TargetType="Line">
                                                <Setter Property="Stroke" Value="White"/>
                                                <Setter Property="StrokeThickness" Value="1"/>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </charting:LinearAxis.Style>
                        </charting:LinearAxis>
                    </charting:Chart.Axes>
                    <charting:Chart.LegendStyle>
                        <Style TargetType="Control">
                            <Setter Property="Width" Value="0"/>
                        </Style>
                    </charting:Chart.LegendStyle>
                    <charting:Chart.Series>
                        
                        <charting:LineSeries ItemsSource="{Binding FilteredBalanceEvolution}" IndependentValueBinding="{Binding Date}" 
                                            DependentValueBinding="{Binding Balance}">
                            <charting:LineSeries.PolylineStyle>
                                <Style TargetType="Polyline">
                                    <Setter Property="StrokeThickness" Value="4"/>
                                    <Setter Property="Stroke" Value="White"/>
                                </Style>
                            </charting:LineSeries.PolylineStyle>
                            <charting:LineSeries.DataPointStyle>
                                <Style TargetType="charting:LineDataPoint">
                                    <Setter Property="Template" Value="{x:Null}"/>

                                    <Setter Property="Background" Value="White"/>
                                    <!--<Setter Property="Width" Value="10"/>
                                    <Setter Property="Height" Value="10"/>-->

                                </Style>
                            </charting:LineSeries.DataPointStyle>
                        </charting:LineSeries>
                        
                    </charting:Chart.Series>
            </charting:Chart>
            </Border>
                
            <!-- Tags repartition -->
            <Border Margin="5" Background="{StaticResource BrownBrush}" Grid.Column="1" Grid.Row="1">
                <charting:Chart Style="{StaticResource SimpleChart}" Template="{StaticResource BareChart}">
                    <charting:Chart.Series>
                        <charting:PieSeries ItemsSource="{Binding TagChartData}" IndependentValueBinding="{Binding Key}" DependentValueBinding="{Binding Value}"/>
                    </charting:Chart.Series>
                </charting:Chart>
            </Border>
        
    </Grid>
</UserControl>

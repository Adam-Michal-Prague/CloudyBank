//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudyBank.PortableServices.Accounts {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDto", Namespace="http://schemas.datacontract.org/2004/07/CloudyBank.Dto")]
    public partial class AccountDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AuthorizeOverdraftField;
        
        private decimal BalanceField;
        
        private System.Nullable<System.DateTime> BalanceDateField;
        
        private string CurrencyField;
        
        private string IbanField;
        
        private int IdField;
        
        private string NumberField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AuthorizeOverdraft {
            get {
                return this.AuthorizeOverdraftField;
            }
            set {
                if ((this.AuthorizeOverdraftField.Equals(value) != true)) {
                    this.AuthorizeOverdraftField = value;
                    this.RaisePropertyChanged("AuthorizeOverdraft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BalanceDate {
            get {
                return this.BalanceDateField;
            }
            set {
                if ((this.BalanceDateField.Equals(value) != true)) {
                    this.BalanceDateField = value;
                    this.RaisePropertyChanged("BalanceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Iban {
            get {
                return this.IbanField;
            }
            set {
                if ((object.ReferenceEquals(this.IbanField, value) != true)) {
                    this.IbanField = value;
                    this.RaisePropertyChanged("Iban");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BalancePointDto", Namespace="http://schemas.datacontract.org/2004/07/CloudyBank.Dto")]
    public partial class BalancePointDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AccountIdField;
        
        private decimal BalanceField;
        
        private System.DateTime DateField;
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="octo.accounts.service", ConfigurationName="Accounts.WCFAccountService")]
    public interface WCFAccountService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="octo.accounts.service/WCFAccountService/GetAccountsByCustomer", ReplyAction="octo.accounts.service/WCFAccountService/GetAccountsByCustomerResponse")]
        System.IAsyncResult BeginGetAccountsByCustomer(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.AccountDto> EndGetAccountsByCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="octo.accounts.service/WCFAccountService/CreateAccount", ReplyAction="octo.accounts.service/WCFAccountService/CreateAccountResponse")]
        System.IAsyncResult BeginCreateAccount(string name, int id, int role, System.AsyncCallback callback, object asyncState);
        
        void EndCreateAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="octo.accounts.service/WCFAccountService/GetAccountEvolution", ReplyAction="octo.accounts.service/WCFAccountService/GetAccountEvolutionResponse")]
        System.IAsyncResult BeginGetAccountEvolution(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.BalancePointDto> EndGetAccountEvolution(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WCFAccountServiceChannel : CloudyBank.PortableServices.Accounts.WCFAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountsByCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountsByCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.AccountDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.AccountDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountEvolutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountEvolutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.BalancePointDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.BalancePointDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFAccountServiceClient : System.ServiceModel.ClientBase<CloudyBank.PortableServices.Accounts.WCFAccountService>, CloudyBank.PortableServices.Accounts.WCFAccountService {
        
        private BeginOperationDelegate onBeginGetAccountsByCustomerDelegate;
        
        private EndOperationDelegate onEndGetAccountsByCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountsByCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateAccountDelegate;
        
        private EndOperationDelegate onEndCreateAccountDelegate;
        
        private System.Threading.SendOrPostCallback onCreateAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountEvolutionDelegate;
        
        private EndOperationDelegate onEndGetAccountEvolutionDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountEvolutionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WCFAccountServiceClient() {
        }
        
        public WCFAccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFAccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFAccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFAccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetAccountsByCustomerCompletedEventArgs> GetAccountsByCustomerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateAccountCompleted;
        
        public event System.EventHandler<GetAccountEvolutionCompletedEventArgs> GetAccountEvolutionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudyBank.PortableServices.Accounts.WCFAccountService.BeginGetAccountsByCustomer(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountsByCustomer(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.AccountDto> CloudyBank.PortableServices.Accounts.WCFAccountService.EndGetAccountsByCustomer(System.IAsyncResult result) {
            return base.Channel.EndGetAccountsByCustomer(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountsByCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((CloudyBank.PortableServices.Accounts.WCFAccountService)(this)).BeginGetAccountsByCustomer(id, callback, asyncState);
        }
        
        private object[] OnEndGetAccountsByCustomer(System.IAsyncResult result) {
            System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.AccountDto> retVal = ((CloudyBank.PortableServices.Accounts.WCFAccountService)(this)).EndGetAccountsByCustomer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountsByCustomerCompleted(object state) {
            if ((this.GetAccountsByCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountsByCustomerCompleted(this, new GetAccountsByCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountsByCustomerAsync(int id) {
            this.GetAccountsByCustomerAsync(id, null);
        }
        
        public void GetAccountsByCustomerAsync(int id, object userState) {
            if ((this.onBeginGetAccountsByCustomerDelegate == null)) {
                this.onBeginGetAccountsByCustomerDelegate = new BeginOperationDelegate(this.OnBeginGetAccountsByCustomer);
            }
            if ((this.onEndGetAccountsByCustomerDelegate == null)) {
                this.onEndGetAccountsByCustomerDelegate = new EndOperationDelegate(this.OnEndGetAccountsByCustomer);
            }
            if ((this.onGetAccountsByCustomerCompletedDelegate == null)) {
                this.onGetAccountsByCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountsByCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountsByCustomerDelegate, new object[] {
                        id}, this.onEndGetAccountsByCustomerDelegate, this.onGetAccountsByCustomerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudyBank.PortableServices.Accounts.WCFAccountService.BeginCreateAccount(string name, int id, int role, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateAccount(name, id, role, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudyBank.PortableServices.Accounts.WCFAccountService.EndCreateAccount(System.IAsyncResult result) {
            base.Channel.EndCreateAccount(result);
        }
        
        private System.IAsyncResult OnBeginCreateAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            int id = ((int)(inValues[1]));
            int role = ((int)(inValues[2]));
            return ((CloudyBank.PortableServices.Accounts.WCFAccountService)(this)).BeginCreateAccount(name, id, role, callback, asyncState);
        }
        
        private object[] OnEndCreateAccount(System.IAsyncResult result) {
            ((CloudyBank.PortableServices.Accounts.WCFAccountService)(this)).EndCreateAccount(result);
            return null;
        }
        
        private void OnCreateAccountCompleted(object state) {
            if ((this.CreateAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateAccountAsync(string name, int id, int role) {
            this.CreateAccountAsync(name, id, role, null);
        }
        
        public void CreateAccountAsync(string name, int id, int role, object userState) {
            if ((this.onBeginCreateAccountDelegate == null)) {
                this.onBeginCreateAccountDelegate = new BeginOperationDelegate(this.OnBeginCreateAccount);
            }
            if ((this.onEndCreateAccountDelegate == null)) {
                this.onEndCreateAccountDelegate = new EndOperationDelegate(this.OnEndCreateAccount);
            }
            if ((this.onCreateAccountCompletedDelegate == null)) {
                this.onCreateAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateAccountCompleted);
            }
            base.InvokeAsync(this.onBeginCreateAccountDelegate, new object[] {
                        name,
                        id,
                        role}, this.onEndCreateAccountDelegate, this.onCreateAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudyBank.PortableServices.Accounts.WCFAccountService.BeginGetAccountEvolution(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountEvolution(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.BalancePointDto> CloudyBank.PortableServices.Accounts.WCFAccountService.EndGetAccountEvolution(System.IAsyncResult result) {
            return base.Channel.EndGetAccountEvolution(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountEvolution(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((CloudyBank.PortableServices.Accounts.WCFAccountService)(this)).BeginGetAccountEvolution(id, callback, asyncState);
        }
        
        private object[] OnEndGetAccountEvolution(System.IAsyncResult result) {
            System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.BalancePointDto> retVal = ((CloudyBank.PortableServices.Accounts.WCFAccountService)(this)).EndGetAccountEvolution(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountEvolutionCompleted(object state) {
            if ((this.GetAccountEvolutionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountEvolutionCompleted(this, new GetAccountEvolutionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountEvolutionAsync(int id) {
            this.GetAccountEvolutionAsync(id, null);
        }
        
        public void GetAccountEvolutionAsync(int id, object userState) {
            if ((this.onBeginGetAccountEvolutionDelegate == null)) {
                this.onBeginGetAccountEvolutionDelegate = new BeginOperationDelegate(this.OnBeginGetAccountEvolution);
            }
            if ((this.onEndGetAccountEvolutionDelegate == null)) {
                this.onEndGetAccountEvolutionDelegate = new EndOperationDelegate(this.OnEndGetAccountEvolution);
            }
            if ((this.onGetAccountEvolutionCompletedDelegate == null)) {
                this.onGetAccountEvolutionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountEvolutionCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountEvolutionDelegate, new object[] {
                        id}, this.onEndGetAccountEvolutionDelegate, this.onGetAccountEvolutionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CloudyBank.PortableServices.Accounts.WCFAccountService CreateChannel() {
            return new WCFAccountServiceClientChannel(this);
        }
        
        private class WCFAccountServiceClientChannel : ChannelBase<CloudyBank.PortableServices.Accounts.WCFAccountService>, CloudyBank.PortableServices.Accounts.WCFAccountService {
            
            public WCFAccountServiceClientChannel(System.ServiceModel.ClientBase<CloudyBank.PortableServices.Accounts.WCFAccountService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAccountsByCustomer(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetAccountsByCustomer", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.AccountDto> EndGetAccountsByCustomer(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.AccountDto> _result = ((System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.AccountDto>)(base.EndInvoke("GetAccountsByCustomer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateAccount(string name, int id, int role, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = name;
                _args[1] = id;
                _args[2] = role;
                System.IAsyncResult _result = base.BeginInvoke("CreateAccount", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateAccount", _args, result);
            }
            
            public System.IAsyncResult BeginGetAccountEvolution(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetAccountEvolution", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.BalancePointDto> EndGetAccountEvolution(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.BalancePointDto> _result = ((System.Collections.Generic.List<CloudyBank.PortableServices.Accounts.BalancePointDto>)(base.EndInvoke("GetAccountEvolution", _args, result)));
                return _result;
            }
        }
    }
}
